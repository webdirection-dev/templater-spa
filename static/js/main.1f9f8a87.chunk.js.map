{"version":3,"sources":["components/currentTime/currentTime.jsx","components/layout/header/index.js","components/layout/header/header.jsx","data/dataForItem.js","components/controlTitleItem/controlTitleItem.jsx","components/controlTitleItem/index.js","components/currentTime/index.js","components/controlPanel/controlPanel.jsx","components/controlPanel/index.js","components/cardItem/cardItem.jsx","components/cardItem/index.js","components/cardsList/index.js","components/cardsList/cardsList.jsx","components/layout/main/index.js","components/layout/main/main.jsx","components/layout/footer/index.js","components/layout/footer/footer.jsx","components/app/app.jsx","components/app/index.js","index.js"],"names":["Header","className","href","id","DataForItem","summary","icon","name","tg","label","value","priority","effect","qualities","stand","notifyPerson","userName","ControlTitleItem","getNameAction","nameAction","useState","namePanel","setNamePanel","isIconForTab","setIconForTab","onShowPanelItem","event","namePanelTarget","target","lastChild","textContent","iconText","parentNode","onClosePanel","View","map","item","classPanel","classesIconClose","onClick","chooseHour","chooseMinute","i","push","hourOpeningInit","Date","getHours","minuteOpeningInit","getMinutes","hourClosingInit","minuteClosingInit","CurrentTime","props","showSetTime","isShowSetTimeClosing","onShowSetTime","Function","prototype","onShowSetTimeClosing","toGetTimeFromPanel","toGetTimeClosing","flagClosing","hour","minute","nowDate","setNowDate","isClassHour","setClassHour","isClassMinute","setClassMinute","isCloseChooseHour","setCloseChooseHour","isCloseChooseMinute","setCloseChooseMinute","hourClosing","minuteClosing","isTimeClosing","setTimeClosing","useEffect","newObj","onChooseHour","onChooseMinute","onCloseChooseHour","onCloseChooseMinute","classesShowChooseTime","classesCloseChooseHour","classesCloseChooseMinute","classesForClock","showHour","showMinute","index","classesItem","String","ControlPanel","toGetDataFromPanel","isQualities","setQualities","isStand","setStand","isSelectTG","setSelectTG","isSelectPriority","setSelectPriority","isSelectEffect","setSelectEffect","isEven","setEven","sokolov","balamutin","zalygin","novak","suprun","isNotifyPerson","setNotifyPerson","setNameAction","setShowSetTime","setShowSetTimeClosing","onChangeInput","onCheckBox","FormToSummary","classesOpen","classesNotify","classesClose","buttonTitle","classesButton","buttonTitleClosing","classesButtonClosing","classesForLabelCountry","classesForLabelStand","classesForLabelTg","length","classesForLabelPriority","classesForLabelEffect","classesForNotifyPersonEven","classesForNotifyPersonEdd","htmlFor","isClearable","onChange","options","placeholder","noOptionsMessage","isMulti","type","checked","CardItem","isDataForCard","Object","isTimeForCard","isTimeForClosing","onCheckInside","flagOpening","isInside","getProblemForAllCards","isProblemForAllCards","getOpsNumberForAllCards","isOpsNumberAllCards","isChooseInside","setChooseInside","isOpsNumber","setOpsNumber","isProblem","setProblem","isNotes","setNotes","isNotesClosing","setNotesClosing","isWarning","setWarning","isPrimary","setPrimary","isInputHourForClosing","setInputHourForClosing","isInputMinuteForClosing","setInputMinuteForClosing","tgOut","onWriteInput","Number","classesForCheckBox","classesForCardInside","classesForLabelInput","inside","classesIfWarning","classesIfPrimary","onChooseInside","onWarningForOps","ViewOpening","onBlur","ViewClosing","CardsList","setInside","setProblemForAllCards","setOpsNumberAllCards","flag","text","num","Main","setDataForCard","setTimeForCard","setTimeForClosing","obj","Footer","getFullYear","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f9f8a87.chunk.js","sourcesContent":["/* eslint-disable */\nimport {useEffect, useState} from \"react\";\nimport './currentTime.css';\n\nconst chooseHour = [];\nconst chooseMinute = [];\n\nfor (let i = 0; i < 60; i++) {\n    if (i < 10) {\n        chooseHour.push(`0${i}`)\n        chooseMinute.push(`0${i}`)\n    } else if (i < 24) {\n        chooseHour.push(i)\n        chooseMinute.push(i)\n    } else chooseMinute.push(i)\n}\n\n// Инициализация времени открытия\nconst hourOpeningInit = new Date().getHours()\nconst minuteOpeningInit = new Date().getMinutes()\n\n// Инициализация времени закрытия\nconst hourClosingInit = new Date().getHours()\nconst minuteClosingInit = new Date().getMinutes()\n\nconst CurrentTime = (props) => {\n    const {\n        showSetTime = false,\n        isShowSetTimeClosing = false,\n        onShowSetTime = Function.prototype,\n        onShowSetTimeClosing = Function.prototype,\n        toGetTimeFromPanel = Function.prototype,\n        toGetTimeClosing = Function.prototype,\n        flagClosing = false\n    } = props;\n\n    const [nowDate, setNowDate] = useState({hour: hourOpeningInit, minute: minuteOpeningInit});\n    const [isClassHour, setClassHour] = useState(null)\n    const [isClassMinute, setClassMinute] = useState(null)\n    const [isCloseChooseHour, setCloseChooseHour] = useState(false)\n    const [isCloseChooseMinute, setCloseChooseMinute] = useState(false)\n    const [isTimeClosing, setTimeClosing] = useState({hourClosing: hourClosingInit +1, minuteClosing: minuteClosingInit})\n\n    // Время открытия\n    let hour = nowDate.hour,\n        minute = nowDate.minute;\n\n    // Время закрытия\n    let hourClosing = isTimeClosing.hourClosing,\n        minuteClosing = isTimeClosing.minuteClosing;\n\n    const onChooseHour = (event) => {\n        const {className, textContent} = event.target;\n\n        if (flagClosing && className === 'choose-time__item') {\n            let newObj = {\n                ...isTimeClosing,\n                hourClosing: textContent\n            }\n            setTimeClosing(newObj)\n            setClassHour(textContent)\n        }\n\n        if (!flagClosing && className === 'choose-time__item') {\n            let newObj = {\n                ...nowDate,\n                hour: textContent\n            }\n            setNowDate(newObj)\n            setClassHour(textContent)\n        }\n    };\n\n    const onChooseMinute = (event) => {\n        const {className, textContent} = event.target;\n\n        if (flagClosing && className === 'choose-time__item') {\n            let newObj = {\n                ...isTimeClosing,\n                minuteClosing: textContent\n            }\n            setTimeClosing(newObj)\n            setClassMinute(textContent)\n        }\n\n        if (!flagClosing && className === 'choose-time__item') {\n            let newObj = {\n                ...nowDate,\n                minute: textContent\n            }\n            setNowDate(newObj)\n            setClassMinute(textContent)\n        }\n    };\n\n    const onCloseChooseHour = () => {\n        setCloseChooseHour(true)\n    };\n\n    const onCloseChooseMinute = () => {\n        setCloseChooseMinute(true)\n    };\n\n    //componentDidMount\n    // Инициализация времени открытия\n    useEffect(() => {\n        if (hour < 10 && typeof hour === 'number') {\n            let newObj = {\n                ...nowDate,\n                hour: `0${hour}`\n            }\n            setNowDate(newObj)\n        }\n\n        if (minute < 10 && typeof hour === 'number') {\n            let newObj = {\n                ...nowDate,\n                minute: `0${minute}`\n            }\n            setNowDate(newObj)\n        }\n    }, []);\n\n    // componentDidMount\n    // Инициализация времени закрытия\n    useEffect(() => {\n        if (hourClosing < 10 && typeof hour === 'number') {\n            let newObj = {\n                ...nowDate,\n                hourClosing: `0${hour +1}`\n            }\n            setTimeClosing(newObj)\n        }\n\n        if (minuteClosing < 10 && typeof hour === 'number') {\n            let newObj = {\n                ...nowDate,\n                minuteClosing: `0${minute}`\n            }\n            setTimeClosing(newObj)\n        }\n    }, []);\n\n    //componentDidUpdate\n    // Закрывает панель выбора времени по крестикам\n    useEffect(() => {\n        if (showSetTime || isShowSetTimeClosing) {\n            setCloseChooseHour(false)\n            setCloseChooseMinute(false)\n        }\n    }, [showSetTime, isShowSetTimeClosing])\n\n    // Закрыть панель с выбором часа и минуты во вкладке открытие\n    useEffect(() => {\n        if (isCloseChooseHour && isCloseChooseMinute) onShowSetTime()\n    }, [isCloseChooseHour, isCloseChooseMinute])\n\n    // Закрыть панель с выбором часа и мнуты во вкладке Закрытие\n    useEffect(() => {\n        if (isCloseChooseHour && isCloseChooseMinute) onShowSetTimeClosing()\n    }, [isCloseChooseHour, isCloseChooseMinute])\n\n    // Поднять наерх время открытия\n    useEffect(() => {\n        toGetTimeFromPanel(nowDate)\n    }, [nowDate])\n\n    // Поднять наерх время закрытия\n    useEffect(() => {\n        toGetTimeClosing(isTimeClosing)\n    }, [isTimeClosing])\n\n    return(\n        <View\n            hour={hour}\n            minute={minute}\n            hourClosing={hourClosing}\n            minuteClosing={minuteClosing}\n\n            showSetTime={showSetTime}\n            isShowSetTimeClosing={isShowSetTimeClosing}\n\n            onChooseHour={onChooseHour}\n            onChooseMinute={onChooseMinute}\n\n            isClassHour={isClassHour}\n            isClassMinute={isClassMinute}\n\n            onCloseChooseHour={onCloseChooseHour}\n            onCloseChooseMinute={onCloseChooseMinute}\n\n            isCloseChooseHour={isCloseChooseHour}\n            isCloseChooseMinute={isCloseChooseMinute}\n\n            flagClosing={flagClosing}\n        />\n    )\n};\n\nexport default CurrentTime;\n\nconst View = (props) => {\n    const {\n        hour,\n        minute,\n        hourClosing,\n        minuteClosing,\n\n        showSetTime,\n        isShowSetTimeClosing,\n        isClassHour,\n        isClassMinute,\n        isCloseChooseHour,\n        isCloseChooseMinute,\n\n        onChooseHour,\n        onChooseMinute,\n        onCloseChooseHour,\n        onCloseChooseMinute,\n\n        flagClosing\n    } = props;\n\n    let classesShowChooseTime = 'hide'\n    if (showSetTime || isShowSetTimeClosing) classesShowChooseTime = 'choose-time'\n    if ((showSetTime || isShowSetTimeClosing) && isCloseChooseMinute && !isCloseChooseHour) classesShowChooseTime = 'choose-time choose-time-without-minute'\n\n    let classesCloseChooseHour = 'hide'\n    if (!isCloseChooseHour) classesCloseChooseHour = 'choose-time__content'\n\n    let classesCloseChooseMinute = 'hide'\n    if (!isCloseChooseMinute) classesCloseChooseMinute = 'choose-time__content'\n\n    let classesForClock = 'control-panel__data blue-text text-accent-1'\n    let showHour = hour\n    let showMinute = minute\n    if (flagClosing) {\n        showHour = hourClosing\n        showMinute = minuteClosing\n        classesForClock = 'control-panel__data red-text text-accent-1'\n    }\n\n    return(\n        <>\n            <div className={classesForClock}>\n                <span>{showHour}</span>\n                <span>:</span>\n                <span>{showMinute}</span>\n            </div>\n\n            <div className={classesShowChooseTime}>\n                <div\n                    className={classesCloseChooseHour}\n                    onClick={(event) => onChooseHour(event)}\n                >\n                    <i\n                        className=\"small material-icons right choose-time__content-icon\"\n                        onClick={onCloseChooseHour}\n                    >clear</i>\n                    <div className='choose-time__title'>Часы</div>\n                    <div className=\"choose-time__elems\">\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseHour.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (item === isClassHour) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index < 10) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{String(item)}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseHour.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (String(item) === isClassHour) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index > 9 && index < 20) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{item}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n\n                        <div className='choose-time__items'>\n                            {\n                                chooseHour.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (String(item) === isClassHour) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index > 19) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{item}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n\n                <div\n                    className={classesCloseChooseMinute}\n                    onClick={(event) => onChooseMinute(event)}\n                >\n                    <i\n                        className=\"small material-icons right choose-time__content-icon\"\n                        onClick={onCloseChooseMinute}\n                    >clear</i>\n                    <div className='choose-time__title'>Минуты</div>\n                    <div className=\"choose-time__elems\">\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseMinute.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (item === isClassMinute) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index < 10) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{String(item)}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseMinute.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (String(item) === isClassMinute) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index > 9 && index < 20) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{item}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseMinute.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (String(item) === isClassMinute) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index > 19 && index < 30) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{item}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseMinute.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (String(item) === isClassMinute) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index > 29 && index < 40) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{item}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseMinute.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (String(item) === isClassMinute) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index > 39 && index < 50) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{item}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseMinute.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (String(item) === isClassMinute) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index > 49) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{item}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};","import Header from \"./header\";\nexport default Header;","import './header.css'\n\nconst Header = () => {\n    return(\n        <nav className='blue-grey darken-2 header'>\n            <div className=\"nav-wrapper\">\n                <a href=\"!#\" className=\"brand-logo\">Шаблонизатор</a>\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                    <li><a href=\"https://jira.crpt.ru/browse/OSISDUTY-167\">JIRA</a></li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default Header;","const DataForItem = {\n    summary: [\n        {\n            icon: 'lock_open',\n            name: 'Открытие'\n        },\n        {\n            icon: 'notifications_active',\n            name: 'Оповещение'\n        },\n        {\n            icon: 'lock_outline',\n            name: 'Закрытие',\n        }\n    ],\n\n    tg: [\n        {\n            label: 'Не определено',\n            value: 'Не определено'\n        },\n        {\n            label: 'Все ТГ',\n            value: 'Все ТГ'\n        },\n        {\n            label: 'Все ТГ, кроме Фарма',\n            value: 'Все ТГ, кроме Фарма',\n        },\n    ],\n\n    priority: [\n        {\n            label: 'Критический',\n            value: 'Критический'\n        },\n        {\n            label: 'Высокий',\n            value: 'Высокий'\n        },\n        {\n            label: 'Средний',\n            value: 'Средний',\n        },\n    ],\n\n    effect: [\n        {\n            label: 'Без влияния',\n            value: 'Без влияния'\n        },\n        {\n            label: 'Массовое',\n            value: 'Массовое'\n        },\n        {\n            label: 'Одиночное',\n            value: 'Одиночное',\n        },\n    ],\n\n    qualities: [\n        {\n            label: 'Россия',\n            value: ''\n        },\n        {\n            label: 'Беларусь',\n            value: 'Республика Беларусь'\n        },\n        {\n            label: 'Узбекистан',\n            value: 'Узбекистан',\n        },\n        {\n            label: 'Казахстан',\n            value: 'Казахстан',\n        },\n    ],\n\n    stand: [\n        {\n            label: 'Прод',\n            value: 'ПРОД'\n        },\n        {\n            label: 'Демо',\n            value: 'ДЕМО'\n        },\n    ],\n\n    notifyPerson: [\n        {\n            name: 'sokolov',\n            userName: '@AndreySokolov83'\n        },\n        {\n            name: 'balamutin',\n            userName: '@dezm0d'\n        },\n        {\n            name: 'zalygin',\n            userName: '@mishanyazal'\n        },\n        {\n            name: 'novak',\n            userName: '@crpt_novak'\n        },\n        {\n            name: 'suprun',\n            userName: '@lacronn'\n        },\n    ]\n};\n\nexport default DataForItem;","import {useState} from \"react\";\nimport DataForItem from \"../../data/dataForItem\";\n\nimport './controlTitleItem.css'\n\nconst ControlTitleItem = ({getNameAction, nameAction}) => {\n    const [namePanel, setNamePanel] = useState(null);\n    const [isIconForTab, setIconForTab] = useState(null);\n\n    const onShowPanelItem = event => {\n        const namePanelTarget = event.target.lastChild.textContent;\n        const iconText = event.target.parentNode.lastChild.textContent;\n\n        setNamePanel(namePanelTarget);\n        setIconForTab(iconText);\n\n        if (namePanelTarget[0] === 'l') getNameAction(iconText)\n        else getNameAction(namePanelTarget)\n    };\n\n    const onClosePanel = () => {\n        getNameAction(null)\n    };\n\n    return(\n        <View\n            onShowPanelItem={onShowPanelItem}\n            namePanel={namePanel}\n            isIconForTab={isIconForTab}\n            onClosePanel={onClosePanel}\n        />\n    )\n};\n\nexport default ControlTitleItem;\n\nconst View = ({onShowPanelItem, namePanel, isIconForTab, onClosePanel}) => {\n\n    return(\n        DataForItem.summary.map(item => {\n            let classPanel = 'control-title__item ';\n            let classesIconClose = 'hide'\n\n            if (item.name === namePanel || item.name === isIconForTab) {\n                classPanel = classPanel + 'control-title__active';\n                classesIconClose = 'small material-icons control-title__close'\n            }\n\n            return(\n                <li\n                    key={item.name}\n                    className={classPanel}\n                    onClick={(event) => onShowPanelItem(event)}\n                >\n                    <div className=\"collapsible-header control-title__header\"><\n                        i className=\"material-icons\">{item.icon}</i>\n                        {item.name}\n                    </div>\n                    <i\n                        className={classesIconClose}\n                        onClick={onClosePanel}\n                    >clear</i>\n                </li>\n            )\n        })\n    )\n};","import ControlTitleItem from \"./controlTitleItem\";\nexport default ControlTitleItem;","import CurrentTime from \"./currentTime\";\nexport default CurrentTime;","import {useEffect, useState} from \"react\";\nimport ControlTitleItem from \"../controlTitleItem\";\nimport CurrentTime from \"../currentTime\";\nimport './controlPanel.css'\n\nimport Select from 'react-select';\nimport DataForItem from \"../../data/dataForItem\";\nconst ControlPanel = (props) => {\n    const {\n        toGetDataFromPanel = Function.prototype,\n        toGetTimeFromPanel = Function.prototype,\n        toGetTimeClosing = Function.prototype,\n    } = props\n\n    const [isQualities, setQualities] = useState(null);\n    const [isStand, setStand] = useState(null);\n    const [isSelectTG, setSelectTG] = useState(null);\n    const [isSelectPriority, setSelectPriority] = useState(null);\n    const [isSelectEffect, setSelectEffect] = useState(null);\n    const [isEven, setEven] = useState(true);\n    const [isNotifyPerson, setNotifyPerson] = useState({\n        sokolov: true,\n        balamutin: true,\n        zalygin: true,\n        novak: true,\n        suprun: true,\n    });\n\n\n    const [nameAction, setNameAction] = useState('');\n    const [showSetTime, setShowSetTime] = useState(false);\n    const [isShowSetTimeClosing, setShowSetTimeClosing] = useState(false);\n\n    const getNameAction = (item) => {\n        setNameAction(item)\n    };\n\n    const onShowSetTime = () => {\n        setShowSetTime(!showSetTime)\n    };\n\n    const onShowSetTimeClosing = () => {\n        setShowSetTimeClosing(!isShowSetTimeClosing)\n    };\n\n    const onChangeInput = (event) => {\n        setEven(!isEven)\n    }\n\n    const onCheckBox = (event) => {\n        const {name} = event.target\n        const newObj = {\n            ...isNotifyPerson,\n            [name]: !isNotifyPerson[name]\n        }\n\n        setNotifyPerson(newObj)\n    }\n\n    const openControl = (item) => {\n        return(\n            <FormToSummary\n                item={item}\n\n                onShowSetTime={onShowSetTime}\n                onShowSetTimeClosing={onShowSetTimeClosing}\n                onChangeInput={onChangeInput}\n                onCheckBox={onCheckBox}\n\n                setQualities={setQualities}\n                setStand={setStand}\n                setSelectTG={setSelectTG}\n                setSelectPriority={setSelectPriority}\n                setSelectEffect={setSelectEffect}\n\n                showSetTime={showSetTime}\n\n                isQualities={isQualities}\n                isStand={isStand}\n                isSelectTG={isSelectTG}\n                isSelectPriority={isSelectPriority}\n                isSelectEffect={isSelectEffect}\n                isShowSetTimeClosing={isShowSetTimeClosing}\n                isEven={isEven}\n                isNotifyPerson={isNotifyPerson}\n\n                toGetTimeFromPanel={toGetTimeFromPanel}\n                toGetTimeClosing={toGetTimeClosing}\n            />\n        )\n    };\n\n    // componentDidUpdate\n    useEffect(() => {\n        toGetDataFromPanel(\n            {\n                qualities: isQualities && isQualities.value,\n                stand: isStand && isStand.value,\n                tg: isSelectTG && isSelectTG,\n                priority: isSelectPriority && isSelectPriority.value,\n                effect: isSelectEffect && isSelectEffect.value,\n            }\n        )\n        // eslint-disable-next-line\n    }, [isQualities, isStand, isSelectTG, isSelectPriority, isSelectEffect])\n\n    return(\n        <div className='control-panel'>\n            <ul className=\"collapsible control-title__list\">\n                <ControlTitleItem\n                    getNameAction={getNameAction}\n                    nameAction={nameAction}\n                />\n            </ul>\n            {openControl(nameAction)}\n        </div>\n    )\n};\n\nexport default ControlPanel;\n\nconst FormToSummary = (props) => {\n    const {\n        item,\n\n        setQualities,\n        setStand,\n        setSelectTG,\n        setSelectPriority,\n        setSelectEffect,\n\n        onShowSetTime,\n        onShowSetTimeClosing,\n        onChangeInput,\n        onCheckBox,\n\n        showSetTime,\n        isQualities,\n        isStand,\n        isSelectTG,\n        isSelectPriority,\n        isSelectEffect,\n        isShowSetTimeClosing,\n        isEven,\n        isNotifyPerson,\n\n        toGetTimeFromPanel,\n        toGetTimeClosing\n    } = props;\n\n    let classesOpen = 'hide';\n    let classesNotify = 'hide';\n    let classesClose = 'hide';\n\n    if (item === 'Открытие') classesOpen = 'control-panel__main'\n    if (item === 'Оповещение') classesNotify = 'control-panel__main'\n    if (item === 'Закрытие') classesClose = 'control-panel__main'\n\n    let buttonTitle = 'Время открытия'\n    let classesButton = 'btn-large'\n    if (showSetTime) {\n        buttonTitle = 'Свернуть выбор'\n        classesButton = classesButton + ' btn__color-orange'\n    }\n\n    let buttonTitleClosing = 'Время закрытия'\n    let classesButtonClosing = 'btn-large'\n    if (isShowSetTimeClosing) {\n        buttonTitleClosing = 'Свернуть выбор'\n        classesButtonClosing = classesButtonClosing + ' btn__color-orange'\n    }\n\n    let classesForLabelCountry = 'hide';\n    if (isQualities !== null) classesForLabelCountry = 'control-panel__label'\n\n    let classesForLabelStand = 'hide';\n    if (isStand !== null) classesForLabelStand = 'control-panel__label'\n\n    let classesForLabelTg = 'hide';\n    if (isSelectTG && isSelectTG.length > 0) classesForLabelTg = 'control-panel__label'\n\n    let classesForLabelPriority = 'hide';\n    if (isSelectPriority !== null) classesForLabelPriority = 'control-panel__label'\n\n    let classesForLabelEffect = 'hide';\n    if (isSelectEffect !== null) classesForLabelEffect = 'control-panel__label'\n\n    let classesForNotifyPersonEven = 'hide';\n    if (isEven) classesForNotifyPersonEven = 'control-panel__footer-even'\n\n    let classesForNotifyPersonEdd = 'hide';\n    if (!isEven) classesForNotifyPersonEdd = 'control-panel__footer-even'\n\n    return (\n        <div className='control-panel__actions'>\n\n            <div className={classesOpen}>\n                <div className=\"control-panel__footer\">\n                    <div className=\"control-panel__select\">\n                        <label\n                            htmlFor='stand'\n                            className={classesForLabelStand}\n                        > Контур </label>\n\n                        <Select\n                            isClearable\n                            name='stand'\n                            className='select-react'\n                            onChange={setStand}\n                            options={DataForItem.stand}\n                            placeholder='Контур'\n                            noOptionsMessage={() => 'Не найдено'}\n                        />\n                    </div>\n\n                    <div className=\"control-panel__select\">\n                        <label\n                            htmlFor='country'\n                            className={classesForLabelCountry}\n                        > Страна </label>\n\n                        <Select\n                            isClearable\n                            name='country'\n                            className='select-react'\n                            onChange={setQualities}\n                            options={DataForItem.qualities}\n                            placeholder='Страна'\n                            noOptionsMessage={() => 'Не найдено'}\n                        />\n                    </div>\n\n                    <div className=\"control-panel__time\">\n                        <button\n                            id='btnOpening'\n                            className={classesButton}\n                            onClick={onShowSetTime}\n                        >{buttonTitle}</button>\n\n                        <CurrentTime\n                            showSetTime={showSetTime}\n                            onShowSetTime={onShowSetTime}\n                            toGetTimeFromPanel={toGetTimeFromPanel}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"control-panel__footer\">\n                    <div className=\"control-panel__select\">\n                        <label\n                            htmlFor='tg'\n                            className={classesForLabelTg}\n                        > ТГ </label>\n\n                        <Select\n                            isMulti\n                            className='select-react'\n                            onChange={setSelectTG}\n                            options={DataForItem.tg}\n                            placeholder='Выбрать ТГ'\n                            noOptionsMessage={() => 'ТГ не найдена'}\n                        />\n                    </div>\n\n                    <div className=\"control-panel__select\">\n                        <label\n                            htmlFor='priority'\n                            className={classesForLabelPriority}\n                        > Приоритет </label>\n\n                        <Select\n                            isClearable\n                            name='priority'\n                            className='select-react'\n                            onChange={setSelectPriority}\n                            options={DataForItem.priority}\n                            placeholder='Приоритет'\n                        />\n                    </div>\n\n                    <div className=\"control-panel__select\">\n                        <label\n                            htmlFor='effect'\n                            className={classesForLabelEffect}\n                        > Влияние </label>\n\n                        <Select\n                            isClearable\n                            name='effect'\n                            className='select-react'\n                            onChange={setSelectEffect}\n                            options={DataForItem.effect}\n                            placeholder='Влияние'\n                        />\n                    </div>\n\n                    {/*<div className=\"control-panel__time\">*/}\n                    {/*    <button*/}\n                    {/*        id='btnOpening'*/}\n                    {/*        className={classesButton}*/}\n                    {/*        onClick={onShowSetTime}*/}\n                    {/*    >{buttonTitle}</button>*/}\n\n                    {/*    <CurrentTime*/}\n                    {/*        showSetTime={showSetTime}*/}\n                    {/*        onShowSetTime={onShowSetTime}*/}\n                    {/*        toGetTimeFromPanel={toGetTimeFromPanel}*/}\n                    {/*    />*/}\n                    {/*</div>*/}\n                </div>\n            </div>\n\n            <div className={classesNotify}>\n                <div className=\"control-panel__footer control-panel__footer-notify\">\n                    <div className='control-panel__footer-radio'>\n                        <label>\n                            <input\n                                name=\"whoNotify\"\n                                type=\"radio\"\n                                checked={isEven}\n                                value='even'\n                                // className='form__input form__input-checkbox'\n                                onChange={onChangeInput}\n                            />\n                            <span>Чётные дии</span>\n                        </label>\n                    </div>\n                    <div className='control-panel__footer-radio'>\n                        <label>\n                            <input\n                                name=\"whoNotify\"\n                                type=\"radio\"\n                                checked={!isEven}\n                                value='odd'\n                                // className='form__input form__input-checkbox'\n                                onChange={onChangeInput}\n                            />\n                            <span>Нечётные дии</span>\n                        </label>\n                    </div>\n                </div>\n\n                <div className=\"control-panel__footer control-panel__footer-notify control-panel__footer-even\">\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            className=\"filled-in\"\n                            name='sokolov'\n                            checked={isNotifyPerson.sokolov}\n                            onChange={onCheckBox}\n                        />\n                        <span>Андрей Соколов</span>\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            className=\"filled-in\"\n                            name='balamutin'\n                            checked={isNotifyPerson.balamutin}\n                            onChange={onCheckBox}\n                        />\n                        <span>Анатолий Баламутин</span>\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            className=\"filled-in\"\n                            name='zalygin'\n                            checked={isNotifyPerson.zalygin}\n                            onChange={onCheckBox}\n                        />\n                        <span>Михаил Залыгин</span>\n                    </label>\n\n                    <label className={classesForNotifyPersonEven}>\n                        <input\n                            type=\"checkbox\"\n                            className=\"filled-in\"\n                            name='novak'\n                            checked={isNotifyPerson.novak}\n                            onChange={onCheckBox}\n                        />\n                        <span>Владислав Новак</span>\n                    </label>\n\n                    <label className={classesForNotifyPersonEdd}>\n                        <input\n                            type=\"checkbox\"\n                            className=\"filled-in\"\n                            name='suprun'\n                            checked={isNotifyPerson.suprun}\n                            onChange={onCheckBox}\n                        />\n                        <span>Иван Супрун</span>\n                    </label>\n                </div>\n                </div>\n\n            <div className={classesClose}>\n                <div className=\"control-panel__footer control-panel__footer-closing\">\n                    <div className=\"control-panel__time\">\n                        <button\n                            id='btnClosing'\n                            className={classesButtonClosing}\n                            onClick={onShowSetTimeClosing}\n                        >{buttonTitleClosing}</button>\n\n                        <CurrentTime\n                            onShowSetTimeClosing={onShowSetTimeClosing}\n                            isShowSetTimeClosing={isShowSetTimeClosing}\n                            toGetTimeClosing={toGetTimeClosing}\n                            flagClosing={true}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};","import ControlPanel from \"./controlPanel\";\nexport default ControlPanel;","import './cardItem.css'\nimport {useEffect, useState} from \"react\";\nimport TextareaAutosize from 'react-textarea-autosize';\n\nconst CardItem = (props) => {\n    const {\n        isDataForCard = Object.prototype,\n        isTimeForCard = Object.prototype,\n        isTimeForClosing = Object.prototype,\n\n        onCheckInside = Function.prototype,\n        flagOpening = true,\n        isInside = false,\n        getProblemForAllCards = Function.prototype,\n        isProblemForAllCards = null,\n        getOpsNumberForAllCards = Function.prototype,\n        isOpsNumberAllCards = null,\n    } = props\n\n    const [isChooseInside, setChooseInside] = useState(false)\n    const [isOpsNumber, setOpsNumber] = useState('')\n    const [isProblem, setProblem] = useState('')\n    const [isNotes, setNotes] = useState('')\n    const [isNotesClosing, setNotesClosing] = useState('')\n    const [isWarning, setWarning] = useState(false)\n    const [isPrimary, setPrimary] = useState(false)\n    const [isInputHourForClosing, setInputHourForClosing] = useState('')\n    const [isInputMinuteForClosing, setInputMinuteForClosing] = useState('')\n\n    const {\n        qualities,\n        stand,\n        tg,\n        priority,\n        effect\n    } = isDataForCard\n\n    const {hour, minute} = isTimeForCard\n    const {hourClosing, minuteClosing} = isTimeForClosing\n\n    // Обработка входящего массива с ТГ\n    let tgOut = null\n\n    if (tg && tg.length === 1) {\n        tgOut = tg.map(i => i.value)\n    }\n\n    if (tg && tg.length > 1) {\n        tgOut = tg.map((i, index) => {\n            if (index < tg.length - 1) return `${i.value}, `\n            return i.value\n        })\n    }\n\n    const onChooseInside = () => {\n        setChooseInside(!isChooseInside)\n    }\n\n    const onWriteInput = (event) => {\n        let {name, value} = event.target\n\n        if (name === 'ops' && Number(value) && value.length < 6) setOpsNumber(value)\n        if (name === 'ops' && value.length === 5) {\n            setWarning(false)\n            setPrimary(true)\n        }\n        if (name === 'ops' && value.length < 5) setPrimary(false)\n        if (name === 'ops' && value === '') setOpsNumber(value)\n\n        if (name === 'problem') {\n            setProblem(value)\n        }\n\n        if (name === 'notes') {\n            setNotes(value)\n        }\n\n        if (name === 'notesClosing') {\n            setNotesClosing(value)\n        }\n\n        if (name === 'hourInputForClosing') {\n            setInputHourForClosing(value)\n        }\n\n        if (name === 'minuteInputForClosing') {\n            setInputMinuteForClosing(value)\n        }\n    }\n\n    const onWarningForOps = (event) => {\n        let {value} = event.target\n        if (value.length < 5) setWarning(true)\n    }\n\n    let classesForCheckBox = 'summary__checkBox'\n    let classesForCardInside = 'hide'\n    let classesForLabelInput = 'summary__chooseInsideLabel'\n\n    let inside = null\n    if (isChooseInside) {\n        inside = 'ВНУТРЕННИЙ'\n        classesForCheckBox = classesForCheckBox + ' summary__checkBox-topCheckBox'\n        classesForCardInside = 'card-title amber-text text-lighten-3'\n        classesForLabelInput = classesForLabelInput + ' mt-7'\n    }\n\n    let classesIfWarning = ''\n    if (isWarning) classesIfWarning = 'red lighten-1'\n\n    let classesIfPrimary = 'form__input orange darken-1 summary__ops-input'\n    if (isPrimary) classesIfPrimary = 'form__input summary__ops-input summary__ops-input-colors'\n\n    if (isInside) {\n        inside = 'ВНУТРЕННИЙ'\n        classesForCardInside = 'card-title'\n    }\n\n    // componentDidUpdate\n    useEffect(() => {\n        onCheckInside(isChooseInside)\n    // eslint-disable-next-line\n    }, [isChooseInside])\n\n    //Передать наверх данные из поля ПРОБЛЕМА\n    // componentDidUpdate\n    useEffect(() => {\n        getProblemForAllCards(isProblem)\n    // eslint-disable-next-line\n    }, [isProblem])\n\n    //Передать наверх данные из поля OPS\n    // componentDidUpdate\n    useEffect(() => {\n        getOpsNumberForAllCards(isOpsNumber)\n    // eslint-disable-next-line\n    }, [isOpsNumber])\n\n    if (flagOpening) {\n        return(\n            <ViewOpening\n                hour={hour}\n                minute={minute}\n\n                inside={inside}\n                stand={stand}\n                tgOut={tgOut}\n                priority={priority}\n                effect={effect}\n                qualities={qualities}\n\n                isChooseInside={isChooseInside}\n                isProblem={isProblem}\n                isOpsNumber={isOpsNumber}\n                isNotes={isNotes}\n\n                onChooseInside={onChooseInside}\n                onWriteInput={onWriteInput}\n                onWarningForOps={onWarningForOps}\n\n                classesForCheckBox={classesForCheckBox}\n                classesForCardInside={classesForCardInside}\n                classesForLabelInput={classesForLabelInput}\n                classesIfWarning={classesIfWarning}\n                classesIfPrimary={classesIfPrimary}\n            />\n        )\n    }\n\n    return(\n        <ViewClosing\n            hour={hour}\n            minute={minute}\n            hourClosing={hourClosing}\n            minuteClosing={minuteClosing}\n\n            inside={inside}\n            stand={stand}\n            tgOut={tgOut}\n            priority={priority}\n            effect={effect}\n            qualities={qualities}\n\n            isChooseInside={isChooseInside}\n            isNotesClosing={isNotesClosing}\n            isProblemForAllCards={isProblemForAllCards}\n            isOpsNumberAllCards={isOpsNumberAllCards}\n            isInputHourForClosing={isInputHourForClosing}\n            isInputMinuteForClosing={isInputMinuteForClosing}\n\n            onWriteInput={onWriteInput}\n\n            classesForCardInside={classesForCardInside}\n        />\n    )\n\n};\n\nexport default CardItem;\n\nconst ViewOpening = (props) => {\n    const {\n        hour,\n        minute,\n\n        inside,\n        stand,\n        qualities,\n        tgOut,\n        priority,\n        effect,\n\n        isChooseInside,\n        isProblem,\n        isOpsNumber,\n        isNotes,\n\n        onChooseInside,\n        onWriteInput,\n        onWarningForOps,\n\n        classesForCheckBox,\n        classesForCardInside,\n        classesForLabelInput,\n        classesIfWarning,\n        classesIfPrimary,\n    } = props\n\n    return(\n        <div className=\"card blue-grey darken-1 summary\">\n            <div className=\"card-content white-text summary-head\">\n\n                <div className={classesForCheckBox}>\n                    <div className=\"summary__checkbox-content\">\n                        <span className={classesForCardInside}>{inside}</span>\n                        <span className=\"card-title\">НОВЫЙ Инцидент</span>\n                    </div>\n\n                    <label className={classesForLabelInput}>\n                        <input\n                            type=\"checkbox\"\n                            name='inside'\n                            className=\"filled-in summary__chooseInside\"\n                            checked={isChooseInside}\n                            onChange={onChooseInside}\n                        />\n                        <span>Внутренний</span>\n                    </label>\n                </div>\n\n                <span className=\"card-title\"><span className='red-text text-lighten-3 colorCoral'>{stand}</span> <span className='colorAqua'>{qualities}</span></span>\n            </div>\n\n            <div className=\"card-action\">\n                <div className=\"summary__body\">\n                    <p>1. Инициатор: Деп. эксплуатации</p>\n                    <p>2. ТГ: <span>{tgOut}</span></p>\n\n                    <p>3. Проблема: </p>\n\n                    <TextareaAutosize\n                        className='summary__area'\n                        value={isProblem}\n                        name=\"problem\"\n                        placeholder='Добавить описание...'\n                        onChange={onWriteInput}\n                    />\n\n                    <p>4. Приоритет: <span>{priority}</span></p>\n                    <p>5. Степень влияния: <span>{effect}</span></p>\n\n                    <div className=\"summary__ops\">\n                        <p className={classesIfWarning}>6. https://jira.crpt.ru/browse/OPS-</p>\n                        <input\n                            value={isOpsNumber}\n                            name='ops'\n                            className={classesIfPrimary}\n                            placeholder='00000'\n                            type=\"text\"\n                            onChange={onWriteInput}\n                            onBlur={onWarningForOps}\n                        />\n                    </div>\n\n                    <p>7. Время открытия: <span className='blue-text text-accent-1'><b>{hour}:{minute}</b></span></p>\n                    <p>8. Планируемое время решения: 1 час</p>\n\n                    <p>9. Примечание:</p>\n                    <TextareaAutosize\n                        className='summary__area'\n                        value={isNotes}\n                        name=\"notes\"\n                        placeholder='Добавить описание...'\n                        onChange={onWriteInput}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst ViewClosing = (props) => {\n    const {\n        hour,\n        minute,\n        hourClosing,\n        minuteClosing,\n\n        inside,\n        stand,\n        qualities,\n        tgOut,\n        priority,\n        effect,\n\n        isNotesClosing,\n        isProblemForAllCards,\n        isOpsNumberAllCards,\n        isInputHourForClosing,\n        isInputMinuteForClosing,\n\n        onWriteInput,\n\n        classesForCardInside,\n    } = props\n\n    return(\n        <div className=\"card blue-grey darken-1 summary\">\n            <div className=\"card-content white-text summary-head\">\n\n                <div className=\"summary__checkbox-content\">\n                    <span className={classesForCardInside}>{inside}</span>\n                    <span className=\"card-title\">Инцидент закрыт</span>\n                </div>\n\n                <span className=\"card-title\"><span>{stand}</span> <span>{qualities}</span></span>\n            </div>\n\n            <div className=\"card-action\">\n                <div className=\"summary__body summary__body-closing\">\n                    <p>1. Инициатор: Деп. эксплуатации</p>\n                    <p>2. ТГ: <span>{tgOut}</span></p>\n\n                    <p>3. Проблема: {isProblemForAllCards}</p>\n\n                    <p>4. Приоритет: <span>{priority}</span></p>\n                    <p>5. Степень влияния: <span>{effect}</span></p>\n                    <p>6. https://jira.crpt.ru/browse/OPS-{isOpsNumberAllCards}</p>\n\n                    <p>7. Время открытия: <span>{hour}:{minute}</span></p>\n\n                    <div className='summary__time-inputs'>8. Длительность:\n                        <input\n                            type=\"text\"\n                            value={isInputHourForClosing}\n                            name='hourInputForClosing'\n                            className='browser-default summary__time-input'\n                            onChange={onWriteInput}\n                            onBlur={() => {\n                                // onValidateName(firstName)\n                            }}\n                        /> час.\n                        <input\n                            type=\"text\"\n                            value={isInputMinuteForClosing}\n                            name='minuteInputForClosing'\n                            className='browser-default summary__time-input'\n                            onChange={onWriteInput}\n                            onBlur={() => {\n                                // onValidateName(firstName)\n                            }}\n                        /> мин.\n                    </div>\n\n                    <p>9. Время закрытия: <span className='red-text text-accent-1'><b>{hourClosing}:{minuteClosing}</b></span></p>\n\n                    <p>10. Примечание:</p>\n                    <TextareaAutosize\n                        className='summary__area'\n                        value={isNotesClosing}\n                        name=\"notesClosing\"\n                        placeholder='Добавить описание...'\n                        onChange={onWriteInput}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}","import CardItem from \"./cardItem\";\nexport default CardItem;","import CardsList from \"./cardsList\";\nexport default CardsList;","import {useState} from \"react\";\n\nimport './cardsList.css';\nimport CardItem from \"../cardItem\";\n\nconst CardsList = (props) => {\n\n    const {\n        isDataForCard = Object.prototype,\n        isTimeForCard = Object.prototype,\n        isTimeForClosing = Object.prototype,\n    } = props\n\n    const [isInside, setInside] = useState(false)\n    const [isProblemForAllCards, setProblemForAllCards] = useState(null)\n    const [isOpsNumberAllCards, setOpsNumberAllCards] = useState(null)\n\n    const onCheckInside = (flag) => {\n        setInside(flag)\n    }\n\n    const getProblemForAllCards = (text) => {\n        setProblemForAllCards(text)\n    }\n\n    const getOpsNumberForAllCards = (num) => {\n        setOpsNumberAllCards(num)\n    }\n\n    return(\n        <div className=\"summary-forms\">\n            <CardItem\n                isDataForCard={isDataForCard}\n                isTimeForCard={isTimeForCard}\n                onCheckInside={onCheckInside}\n                getProblemForAllCards={getProblemForAllCards}\n                getOpsNumberForAllCards={getOpsNumberForAllCards}\n            />\n\n            <CardItem />\n\n            <CardItem\n                isDataForCard={isDataForCard}\n                isTimeForCard={isTimeForCard}\n                isInside={isInside}\n                flagOpening={false}\n                isProblemForAllCards={isProblemForAllCards}\n                isOpsNumberAllCards={isOpsNumberAllCards}\n                isTimeForClosing={isTimeForClosing}\n            />\n        </div>\n    )\n};\n\nexport default CardsList;","import Main from \"./main\";\nexport default Main;","import {useState} from \"react\";\nimport ControlPanel from \"../../controlPanel\";\nimport CardsList from \"../../cardsList\";\n\nconst Main = () => {\n    const [isDataForCard, setDataForCard] = useState({})\n    const [isTimeForCard, setTimeForCard] = useState({})\n    const [isTimeForClosing, setTimeForClosing] = useState({})\n\n    const toGetDataFromPanel = (obj) => {\n        setDataForCard(obj)\n    }\n\n    const toGetTimeFromPanel = (obj) => {\n        setTimeForCard(obj)\n    }\n\n    const toGetTimeClosing = (obj) => {\n        setTimeForClosing(obj)\n    }\n\n    return(\n        <>\n            <ControlPanel\n                toGetDataFromPanel={toGetDataFromPanel}\n                toGetTimeFromPanel={toGetTimeFromPanel}\n                toGetTimeClosing={toGetTimeClosing}\n            />\n\n            <div className='content container'>\n                <CardsList\n                    isDataForCard={isDataForCard}\n                    isTimeForCard={isTimeForCard}\n                    isTimeForClosing={isTimeForClosing}\n                />\n            </div>\n        </>\n\n    )\n};\n\nexport default Main;","import Footer from \"./footer\";\nexport default Footer;","const Footer = () => {\n    return(\n        <footer className=\"page-footer blue-grey darken-4\">\n            <div className=\"footer-copyright\">\n                <div className=\"container\">\n                    DUTY © {new Date().getFullYear()}\n                    <a className=\"grey-text text-lighten-4 right\" href=\"https://github.com/webdirection-dev/templater-spa\">Repo</a>\n                </div>\n            </div>\n        </footer>\n    )\n};\n\nexport default Footer;","import Header from \"../layout/header\";\nimport Main from \"../layout/main\";\nimport Footer from \"../layout/footer\";\n\nimport './App.css';\n\nfunction App() {\n    return (\n        <>\n            <Header />\n            <Main />\n            <Footer />\n        </>\n    );\n}\n\nexport default App;\n","import App from \"./app\";\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./components/app\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}