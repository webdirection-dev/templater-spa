{"version":3,"sources":["components/currentTime/currentTime.jsx","components/layout/header/index.js","components/layout/header/header.jsx","data/dataForItem.js","components/controlTitleItem/controlTitleItem.jsx","components/controlTitleItem/index.js","components/currentTime/index.js","components/controlPanel/controlPanel.jsx","components/controlPanel/index.js","components/cardItem/cardItem.jsx","components/cardItem/index.js","components/notifyPerson/index.js","components/notifyPerson/notifyPerson.jsx","components/updateCard/index.js","components/updateCard/updateCard.jsx","components/cardsList/index.js","components/cardsList/cardsList.jsx","components/layout/main/index.js","components/layout/main/main.jsx","components/layout/footer/index.js","components/layout/footer/footer.jsx","components/app/app.jsx","components/app/index.js","index.js"],"names":["Header","className","href","id","DataForItem","summary","icon","name","tg","label","value","priority","effect","qualities","stand","notifyPerson","userName","ControlTitleItem","getNameAction","nameAction","useState","namePanel","setNamePanel","isIconForTab","setIconForTab","onShowPanelItem","event","namePanelTarget","target","lastChild","textContent","iconText","parentNode","onClosePanel","View","map","item","classPanel","classesIconClose","onClick","chooseHour","chooseMinute","i","push","hourOpeningInit","Date","getHours","minuteOpeningInit","getMinutes","hourClosingInit","minuteClosingInit","CurrentTime","props","showSetTime","isShowSetTimeClosing","onShowSetTime","Function","prototype","onShowSetTimeClosing","toGetTimeFromPanel","toGetTimeClosing","flagClosing","hour","minute","nowDate","setNowDate","isClassHour","setClassHour","isClassMinute","setClassMinute","isCloseChooseHour","setCloseChooseHour","isCloseChooseMinute","setCloseChooseMinute","hourClosing","minuteClosing","isTimeClosing","setTimeClosing","hourClosingToShowAtMenu","minuteClosingToShowAtMenu","useEffect","newObj","onChooseHour","onChooseMinute","onCloseChooseHour","onCloseChooseMinute","classesShowChooseTime","classesCloseChooseHour","classesCloseChooseMinute","classesForClock","showHour","showMinute","index","classesItem","String","ControlPanel","toGetDataFromPanel","toGetNotifyPerson","isQualities","setQualities","isStand","setStand","isSelectTG","setSelectTG","isSelectPriority","setSelectPriority","isSelectEffect","setSelectEffect","isEven","setEven","sokolov","balamutin","zalygin","novak","suprun","isNotifyPerson","setNotifyPerson","setNameAction","setShowSetTime","setShowSetTimeClosing","onChangeInput","onCheckBox","FormToSummary","classesOpen","classesNotify","classesClose","buttonTitle","classesButton","buttonTitleClosing","classesButtonClosing","classesForLabelCountry","classesForLabelStand","classesForLabelTg","length","classesForLabelPriority","classesForLabelEffect","classesForNotifyPersonEven","classesForNotifyPersonEdd","htmlFor","isClearable","onChange","options","placeholder","noOptionsMessage","isMulti","type","checked","CardItem","isDataForCard","Object","isTimeForCard","isTimeForClosing","onCheckInside","flagOpening","isInside","getProblemForAllCards","isProblemForAllCards","getOpsNumberForAllCards","isOpsNumberAllCards","getWhoNotify","isWhoNotifyForClosing","isChooseInside","setChooseInside","isOpsNumber","setOpsNumber","isProblem","setProblem","isNotes","setNotes","isWhoNotify","setWhoNotify","isNotesClosing","setNotesClosing","isWarning","setWarning","isPrimary","setPrimary","isInputHourForClosing","setInputHourForClosing","isInputMinuteForClosing","setInputMinuteForClosing","tgOut","onWriteInput","Number","classesForCheckBox","classesForCardInside","classesForLabelInput","inside","classesIfWarning","classesIfPrimary","onChooseInside","onWarningForOps","ViewOpening","onBlur","ViewClosing","ViewTmeClosing","NotifyPerson","Array","pre","UpdateCard","isNotesUpdate","setNotesUpdate","CardsList","setInside","setProblemForAllCards","setOpsNumberAllCards","setWhoNotifyForClosing","flag","text","num","txt","Main","setDataForCard","setTimeForCard","setTimeForClosing","obj","arr","forEach","Footer","getFullYear","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42b6a42e.chunk.js","sourcesContent":["import {useEffect, useState} from \"react\";\nimport './currentTime.css';\n\nconst chooseHour = [];\nconst chooseMinute = [];\n\nfor (let i = 0; i < 60; i++) {\n    if (i < 10) {\n        chooseHour.push(`0${i}`)\n        chooseMinute.push(`0${i}`)\n    } else if (i < 24) {\n        chooseHour.push(i)\n        chooseMinute.push(i)\n    } else chooseMinute.push(i)\n}\n\n// Инициализация времени открытия\nconst hourOpeningInit = new Date().getHours()\nconst minuteOpeningInit = new Date().getMinutes()\n\n// Инициализация времени закрытия\nconst hourClosingInit = new Date().getHours()\nconst minuteClosingInit = new Date().getMinutes()\n\nconst CurrentTime = (props) => {\n    const {\n        showSetTime = false,\n        isShowSetTimeClosing = false,\n        onShowSetTime = Function.prototype,\n        onShowSetTimeClosing = Function.prototype,\n        toGetTimeFromPanel = Function.prototype,\n        toGetTimeClosing = Function.prototype,\n        flagClosing = false\n    } = props;\n\n    const [nowDate, setNowDate] = useState({hour: hourOpeningInit, minute: minuteOpeningInit});\n    const [isClassHour, setClassHour] = useState(null)\n    const [isClassMinute, setClassMinute] = useState(null)\n    const [isCloseChooseHour, setCloseChooseHour] = useState(false)\n    const [isCloseChooseMinute, setCloseChooseMinute] = useState(false)\n    const [isTimeClosing, setTimeClosing] = useState({hourClosing: hourClosingInit +1, minuteClosing: minuteClosingInit})\n\n    // Время открытия\n    let hour = nowDate.hour,\n        minute = nowDate.minute;\n\n    // Время закрытия\n    let hourClosingToShowAtMenu = isTimeClosing.hourClosing,\n        minuteClosingToShowAtMenu = isTimeClosing.minuteClosing;\n\n    const onChooseHour = (event) => {\n        const {className, textContent} = event.target;\n\n        if (flagClosing && className === 'choose-time__item') {\n            let newObj = {\n                ...isTimeClosing,\n                hourClosing: textContent\n            }\n            setTimeClosing(newObj)\n            setClassHour(textContent)\n        }\n\n        if (!flagClosing && className === 'choose-time__item') {\n            let newObj = {\n                ...nowDate,\n                hour: textContent\n            }\n            setNowDate(newObj)\n            setClassHour(textContent)\n        }\n    };\n\n    const onChooseMinute = (event) => {\n        const {className, textContent} = event.target;\n\n        if (flagClosing && className === 'choose-time__item') {\n            let newObj = {\n                ...isTimeClosing,\n                minuteClosing: textContent\n            }\n            setTimeClosing(newObj)\n            setClassMinute(textContent)\n        }\n\n        if (!flagClosing && className === 'choose-time__item') {\n            let newObj = {\n                ...nowDate,\n                minute: textContent\n            }\n            setNowDate(newObj)\n            setClassMinute(textContent)\n        }\n    };\n\n    const onCloseChooseHour = () => {\n        setCloseChooseHour(true)\n    };\n\n    const onCloseChooseMinute = () => {\n        setCloseChooseMinute(true)\n    };\n\n    //componentDidMount\n    // Инициализация времени открытия\n    useEffect(() => {\n        if (hour < 10 && typeof hour === 'number') {\n            let newObj = {\n                ...nowDate,\n                hour: `0${hour}`\n            }\n            setNowDate(newObj)\n        }\n\n        if (minute < 10 && typeof hour === 'number') {\n            let newObj = {\n                ...nowDate,\n                minute: `0${minute}`\n            }\n            setNowDate(newObj)\n        }\n    // eslint-disable-next-line\n    }, []);\n\n    // componentDidMount\n    // Инициализация времени закрытия\n    //     useEffect(() => {\n    //         // if (hourClosingToShowAtMenu < 10 && typeof hour === 'number') {\n    //         //     let newObj = {\n    //         //         ...nowDate,\n    //         //         hourClosing: `0${hour +1}`\n    //         //     }\n    //         //     setTimeClosing(newObj)\n    //         // }\n    //\n    //         //  if (minuteClosingToShowAtMenu < 10 && typeof hour === 'number') {\n    //         //     let newObj = {\n    //         //         ...nowDate,\n    //         //         minuteClosing: `0${minute}`\n    //         //     }\n    //         //     setTimeClosing(newObj)\n    //         // }\n    //\n    //         //  if (minuteClosingToShowAtMenu > 9 && typeof hour === 'number') {\n    //         //     let newObj = {\n    //         //         ...nowDate,\n    //         //         minuteClosing: `${minute}`\n    //         //     }\n    //         //     setTimeClosing(newObj)\n    //         // }\n    //         // eslint-disable-next-line\n    //     }, []);\n\n    //componentDidUpdate\n    // Закрывает панель выбора времени по крестикам\n    useEffect(() => {\n        if (showSetTime || isShowSetTimeClosing) {\n            setCloseChooseHour(false)\n            setCloseChooseMinute(false)\n        }\n    }, [showSetTime, isShowSetTimeClosing])\n\n    // Закрыть панель с выбором часа и минуты во вкладке открытие\n    useEffect(() => {\n        if (isCloseChooseHour && isCloseChooseMinute) onShowSetTime()\n        // eslint-disable-next-line\n    }, [isCloseChooseHour, isCloseChooseMinute])\n\n    // Закрыть панель с выбором часа и мнуты во вкладке Закрытие\n    useEffect(() => {\n        if (isCloseChooseHour && isCloseChooseMinute) onShowSetTimeClosing()\n        // eslint-disable-next-line\n    }, [isCloseChooseHour, isCloseChooseMinute])\n\n    // Поднять наерх время открытия\n    useEffect(() => {\n        toGetTimeFromPanel(nowDate)\n        // eslint-disable-next-line\n    }, [nowDate])\n\n    // Поднять наерх время закрытия\n    useEffect(() => {\n        toGetTimeClosing(isTimeClosing)\n        // eslint-disable-next-line\n    }, [isTimeClosing])\n\n    return(\n        <View\n            hour={hour}\n            minute={minute}\n            hourClosingToShowAtMenu={hourClosingToShowAtMenu}\n            minuteClosingToShowAtMenu={minuteClosingToShowAtMenu}\n            // hourClosing={hourClosing}\n            // minuteClosing={minuteClosing}\n\n            showSetTime={showSetTime}\n            isShowSetTimeClosing={isShowSetTimeClosing}\n\n            onChooseHour={onChooseHour}\n            onChooseMinute={onChooseMinute}\n\n            isClassHour={isClassHour}\n            isClassMinute={isClassMinute}\n\n            onCloseChooseHour={onCloseChooseHour}\n            onCloseChooseMinute={onCloseChooseMinute}\n\n            isCloseChooseHour={isCloseChooseHour}\n            isCloseChooseMinute={isCloseChooseMinute}\n\n            flagClosing={flagClosing}\n        />\n    )\n};\n\nexport default CurrentTime;\n\nconst View = (props) => {\n    const {\n        hour,\n        minute,\n        // hourClosing,\n        hourClosingToShowAtMenu,\n        minuteClosingToShowAtMenu,\n        // minuteClosing,\n\n        showSetTime,\n        isShowSetTimeClosing,\n        isClassHour,\n        isClassMinute,\n        isCloseChooseHour,\n        isCloseChooseMinute,\n\n        onChooseHour,\n        onChooseMinute,\n        onCloseChooseHour,\n        onCloseChooseMinute,\n\n        flagClosing\n    } = props;\n\n    let classesShowChooseTime = 'hide'\n    if (showSetTime || isShowSetTimeClosing) classesShowChooseTime = 'choose-time'\n    if ((showSetTime || isShowSetTimeClosing) && isCloseChooseMinute && !isCloseChooseHour) classesShowChooseTime = 'choose-time choose-time-without-minute'\n\n    let classesCloseChooseHour = 'hide'\n    if (!isCloseChooseHour) classesCloseChooseHour = 'choose-time__content'\n\n    let classesCloseChooseMinute = 'hide'\n    if (!isCloseChooseMinute) classesCloseChooseMinute = 'choose-time__content'\n\n    let classesForClock = 'control-panel__data blue-text text-accent-1'\n    let showHour = hour\n    let showMinute = minute\n    if (flagClosing) {\n        // showHour = hourClosing\n        showHour = hourClosingToShowAtMenu\n        showMinute = minuteClosingToShowAtMenu\n        // showMinute = minuteClosing\n        classesForClock = 'control-panel__data red-text text-accent-1'\n    }\n\n    return(\n        <>\n            <div className={classesForClock}>\n                <span>{showHour}</span>\n                <span>:</span>\n                <span>{showMinute}</span>\n            </div>\n\n            <div className={classesShowChooseTime}>\n                <div\n                    className={classesCloseChooseHour}\n                    onClick={(event) => onChooseHour(event)}\n                >\n                    <i\n                        className=\"small material-icons right choose-time__content-icon\"\n                        onClick={onCloseChooseHour}\n                    >clear</i>\n                    <div className='choose-time__title'>Часы</div>\n                    <div className=\"choose-time__elems\">\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseHour.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (item === isClassHour) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index < 10) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{String(item)}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseHour.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (String(item) === isClassHour) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index > 9 && index < 20) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{item}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n\n                        <div className='choose-time__items'>\n                            {\n                                chooseHour.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (String(item) === isClassHour) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index > 19) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{item}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n\n                <div\n                    className={classesCloseChooseMinute}\n                    onClick={(event) => onChooseMinute(event)}\n                >\n                    <i\n                        className=\"small material-icons right choose-time__content-icon\"\n                        onClick={onCloseChooseMinute}\n                    >clear</i>\n                    <div className='choose-time__title'>Минуты</div>\n                    <div className=\"choose-time__elems\">\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseMinute.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (item === isClassMinute) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index < 10) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{String(item)}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseMinute.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (String(item) === isClassMinute) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index > 9 && index < 20) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{item}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseMinute.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (String(item) === isClassMinute) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index > 19 && index < 30) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{item}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseMinute.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (String(item) === isClassMinute) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index > 29 && index < 40) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{item}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseMinute.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (String(item) === isClassMinute) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index > 39 && index < 50) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{item}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n\n                        <div className='choose-time__items choose-time__item-group'>\n                            {\n                                chooseMinute.map((item, index) => {\n                                    let classesItem = 'choose-time__item'\n                                    if (String(item) === isClassMinute) classesItem = classesItem + ' choose-time__item-color'\n\n                                    if (index > 49) {\n                                        return(\n                                            <div\n                                                key={index}\n                                                className={classesItem}\n                                            >{item}</div>\n                                        )\n                                    } else return null\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n};","import Header from \"./header\";\nexport default Header;","import './header.css'\n\nconst Header = () => {\n    return(\n        <nav className='blue-grey darken-2 header'>\n            <div className=\"nav-wrapper\">\n                <a href=\"./\" className=\"brand-logo\">DUTY</a>\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                    <li><a href=\"https://jira.crpt.ru/browse/OSISDUTY-167\">JIRA</a></li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default Header;","const DataForItem = {\n    summary: [\n        {\n            icon: 'lock_open',\n            name: 'Открытие'\n        },\n        {\n            icon: 'notifications_active',\n            name: 'Оповещение'\n        },\n        {\n            icon: 'lock_outline',\n            name: 'Закрытие',\n        }\n    ],\n\n    tg: [\n        {\n            label: 'Все ТГ',\n            value: 'Все ТГ'\n        },\n        {\n            label: 'Все ТГ, кроме Фарма',\n            value: 'Все ТГ, кроме Фарма',\n        },\n        {\n            label: 'Не определено',\n            value: 'Не определено'\n        },\n        {\n            label: 'АТП',\n            value: 'АТП'\n        },\n        {\n            label: 'БАД',\n            value: 'БАД'\n        },\n        {\n            label: 'Велосипеды',\n            value: 'Велосипеды'\n        },\n        {\n            label: 'Кресла-коляски',\n            value: 'Кресла-коляски'\n        },\n        {\n            label: 'ЛегПром',\n            value: 'ЛегПром'\n        },\n        {\n            label: 'Меха',\n            value: 'Меха'\n        },\n        {\n            label: 'Молочная продукция',\n            value: 'Молочная продукция'\n        },\n        {\n            label: 'Обувь',\n            value: 'Обувь'\n        },\n        {\n            label: 'Парфюмерия',\n            value: 'Парфюмерия'\n        },\n        {\n            label: 'Пиво',\n            value: 'Пиво'\n        },\n        {\n            label: 'Питьевая вода',\n            value: 'Питьевая вода'\n        },\n        {\n            label: 'РВ',\n            value: 'РВ'\n        },\n        {\n            label: 'Табак',\n            value: 'Табак'\n        },\n        {\n            label: 'Фарма',\n            value: 'Фарма'\n        },\n        {\n            label: 'Фототехника',\n            value: 'Фототехника'\n        },\n        {\n            label: 'Шины',\n            value: 'Шины'\n        },\n    ],\n\n    priority: [\n        {\n            label: 'Критический',\n            value: 'Критический'\n        },\n        {\n            label: 'Высокий',\n            value: 'Высокий'\n        },\n        {\n            label: 'Средний',\n            value: 'Средний',\n        },\n    ],\n\n    effect: [\n\n        {\n            label: 'Массовое',\n            value: 'Массовое'\n        },\n        {\n            label: 'Одиночное',\n            value: 'Одиночное',\n        },\n        {\n            label: 'Групповое',\n            value: 'Групповое',\n        },\n        {\n            label: 'Без влияния',\n            value: 'Без влияния'\n        },\n    ],\n\n    qualities: [\n        {\n            label: 'Россия',\n            value: ''\n        },\n        {\n            label: 'Беларусь',\n            value: 'Республика Беларусь'\n        },\n        {\n            label: 'Узбекистан',\n            value: 'Узбекистан',\n        },\n        {\n            label: 'Казахстан',\n            value: 'Казахстан',\n        },\n    ],\n\n    stand: [\n        {\n            label: 'Прод',\n            value: 'ПРОД'\n        },\n        {\n            label: 'Демо',\n            value: 'ДЕМО'\n        },\n        {\n            label: 'Прод + Демо',\n            value: 'ПРОД+ДЕМО'\n        },\n    ],\n\n    notifyPerson: [\n        {\n            name: 'sokolov',\n            userName: '@AndreySokolov83'\n        },\n        {\n            name: 'balamutin',\n            userName: '@dezm0d'\n        },\n        {\n            name: 'zalygin',\n            userName: '@mishanyazal'\n        },\n        {\n            name: 'novak',\n            userName: '@crpt_novak'\n        },\n        {\n            name: 'suprun',\n            userName: '@lacronn'\n        },\n    ]\n};\n\nexport default DataForItem;","import {useState} from \"react\";\nimport DataForItem from \"../../data/dataForItem\";\n\nimport './controlTitleItem.css'\n\nconst ControlTitleItem = ({getNameAction, nameAction}) => {\n    const [namePanel, setNamePanel] = useState(null);\n    const [isIconForTab, setIconForTab] = useState(null);\n\n    const onShowPanelItem = event => {\n        const namePanelTarget = event.target.lastChild.textContent;\n        const iconText = event.target.parentNode.lastChild.textContent;\n\n        setNamePanel(namePanelTarget);\n        setIconForTab(iconText);\n\n        if (namePanelTarget[0] === 'l') getNameAction(iconText)\n        else getNameAction(namePanelTarget)\n    };\n\n    const onClosePanel = () => {\n        getNameAction(null)\n    };\n\n    return(\n        <View\n            onShowPanelItem={onShowPanelItem}\n            namePanel={namePanel}\n            isIconForTab={isIconForTab}\n            onClosePanel={onClosePanel}\n        />\n    )\n};\n\nexport default ControlTitleItem;\n\nconst View = ({onShowPanelItem, namePanel, isIconForTab, onClosePanel}) => {\n\n    return(\n        DataForItem.summary.map(item => {\n            let classPanel = 'control-title__item ';\n            let classesIconClose = 'hide'\n\n            if (item.name === namePanel || item.name === isIconForTab) {\n                classPanel = classPanel + 'control-title__active';\n                classesIconClose = 'small material-icons control-title__close'\n            }\n\n            return(\n                <li\n                    key={item.name}\n                    className={classPanel}\n                    onClick={(event) => onShowPanelItem(event)}\n                >\n                    <div className=\"collapsible-header control-title__header\"><\n                        i className=\"material-icons\">{item.icon}</i>\n                        {item.name}\n                    </div>\n                    <i\n                        className={classesIconClose}\n                        onClick={onClosePanel}\n                    >clear</i>\n                </li>\n            )\n        })\n    )\n};","import ControlTitleItem from \"./controlTitleItem\";\nexport default ControlTitleItem;","import CurrentTime from \"./currentTime\";\nexport default CurrentTime;","import {useEffect, useState} from \"react\";\nimport ControlTitleItem from \"../controlTitleItem\";\nimport CurrentTime from \"../currentTime\";\nimport './controlPanel.css'\n\nimport Select from 'react-select';\nimport DataForItem from \"../../data/dataForItem\";\nconst ControlPanel = (props) => {\n    const {\n        toGetDataFromPanel = Function.prototype,\n        toGetTimeFromPanel = Function.prototype,\n        toGetTimeClosing = Function.prototype,\n        toGetNotifyPerson = Function.prototype,\n    } = props\n\n    const [isQualities, setQualities] = useState(null);\n    const [isStand, setStand] = useState(null);\n    const [isSelectTG, setSelectTG] = useState(null);\n    const [isSelectPriority, setSelectPriority] = useState(null);\n    const [isSelectEffect, setSelectEffect] = useState(null);\n    const [isEven, setEven] = useState(true);\n    const [isNotifyPerson, setNotifyPerson] = useState({\n        sokolov: true,\n        balamutin: true,\n        zalygin: true,\n        novak: true,\n        suprun: false,\n    });\n\n    const [nameAction, setNameAction] = useState('');\n    const [showSetTime, setShowSetTime] = useState(false);\n    const [isShowSetTimeClosing, setShowSetTimeClosing] = useState(false);\n\n    const getNameAction = (item) => {\n        setNameAction(item)\n    };\n\n    const onShowSetTime = () => {\n        setShowSetTime(!showSetTime)\n    };\n\n    const onShowSetTimeClosing = () => {\n        setShowSetTimeClosing(!isShowSetTimeClosing)\n    };\n\n    const onChangeInput = (event) => {\n        setEven(!isEven)\n    }\n\n    const onCheckBox = (event) => {\n        const {name} = event.target\n        const newObj = {\n            ...isNotifyPerson,\n            [name]: !isNotifyPerson[name]\n        }\n\n        setNotifyPerson(newObj)\n    }\n\n    const openControl = (item) => {\n        return(\n            <FormToSummary\n                item={item}\n\n                onShowSetTime={onShowSetTime}\n                onShowSetTimeClosing={onShowSetTimeClosing}\n                onChangeInput={onChangeInput}\n                onCheckBox={onCheckBox}\n\n                setQualities={setQualities}\n                setStand={setStand}\n                setSelectTG={setSelectTG}\n                setSelectPriority={setSelectPriority}\n                setSelectEffect={setSelectEffect}\n\n                showSetTime={showSetTime}\n\n                isQualities={isQualities}\n                isStand={isStand}\n                isSelectTG={isSelectTG}\n                isSelectPriority={isSelectPriority}\n                isSelectEffect={isSelectEffect}\n                isShowSetTimeClosing={isShowSetTimeClosing}\n                isEven={isEven}\n                isNotifyPerson={isNotifyPerson}\n\n                toGetTimeFromPanel={toGetTimeFromPanel}\n                toGetTimeClosing={toGetTimeClosing}\n            />\n        )\n    };\n\n    // componentDidUpdate\n    useEffect(() => {\n        toGetDataFromPanel(\n            {\n                qualities: isQualities && isQualities.value,\n                stand: isStand && isStand.value,\n                tg: isSelectTG && isSelectTG,\n                priority: isSelectPriority && isSelectPriority.value,\n                effect: isSelectEffect && isSelectEffect.value,\n            }\n        )\n        // eslint-disable-next-line\n    }, [isQualities, isStand, isSelectTG, isSelectPriority, isSelectEffect])\n\n    // componentDidUpdate\n    // Контролирует состояние персон оповещения в зависимости от чет/нечет\n    useEffect(() => {\n        let newObj = {}\n\n        if (isEven) {\n             newObj = {\n                ...isNotifyPerson,\n                suprun: false,\n                novak: true\n            }\n        } else {\n            newObj = {\n                ...isNotifyPerson,\n                suprun: true,\n                novak: false\n            }\n        }\n\n        setNotifyPerson(newObj)\n    // eslint-disable-next-line\n    }, [isEven])\n\n    // componentDidUpdate\n    // передать наверх данные об оповещаемых персонах\n    useEffect(() => {\n        toGetNotifyPerson(isNotifyPerson)\n    // eslint-disable-next-line\n    }, [isNotifyPerson])\n\n    return(\n        <div className='control-panel'>\n            <ul className=\"collapsible control-title__list\">\n                <ControlTitleItem\n                    getNameAction={getNameAction}\n                    nameAction={nameAction}\n                />\n            </ul>\n            {openControl(nameAction)}\n        </div>\n    )\n};\n\nexport default ControlPanel;\n\nconst FormToSummary = (props) => {\n    const {\n        item,\n\n        setQualities,\n        setStand,\n        setSelectTG,\n        setSelectPriority,\n        setSelectEffect,\n\n        onShowSetTime,\n        onShowSetTimeClosing,\n        onChangeInput,\n        onCheckBox,\n\n        showSetTime,\n        isQualities,\n        isStand,\n        isSelectTG,\n        isSelectPriority,\n        isSelectEffect,\n        isShowSetTimeClosing,\n        isEven,\n        isNotifyPerson,\n\n        toGetTimeFromPanel,\n        toGetTimeClosing\n    } = props;\n\n    let classesOpen = 'hide';\n    let classesNotify = 'hide';\n    let classesClose = 'hide';\n\n    if (item === 'Открытие') classesOpen = 'control-panel__main'\n    if (item === 'Оповещение') classesNotify = 'control-panel__main'\n    if (item === 'Закрытие') classesClose = 'control-panel__main'\n\n    let buttonTitle = 'Время открытия'\n    let classesButton = 'btn-large'\n    if (showSetTime) {\n        buttonTitle = 'Свернуть выбор'\n        classesButton = classesButton + ' btn__color-orange'\n    }\n\n    let buttonTitleClosing = 'Время закрытия'\n    let classesButtonClosing = 'btn-large'\n    if (isShowSetTimeClosing) {\n        buttonTitleClosing = 'Свернуть выбор'\n        classesButtonClosing = classesButtonClosing + ' btn__color-orange'\n    }\n\n    let classesForLabelCountry = 'hide';\n    if (isQualities !== null) classesForLabelCountry = 'control-panel__label'\n\n    let classesForLabelStand = 'hide';\n    if (isStand !== null) classesForLabelStand = 'control-panel__label'\n\n    let classesForLabelTg = 'hide';\n    if (isSelectTG && isSelectTG.length > 0) classesForLabelTg = 'control-panel__label'\n\n    let classesForLabelPriority = 'hide';\n    if (isSelectPriority !== null) classesForLabelPriority = 'control-panel__label'\n\n    let classesForLabelEffect = 'hide';\n    if (isSelectEffect !== null) classesForLabelEffect = 'control-panel__label'\n\n    let classesForNotifyPersonEven = 'hide';\n    if (isEven) classesForNotifyPersonEven = 'control-panel__footer-even'\n\n    let classesForNotifyPersonEdd = 'hide';\n    if (!isEven) classesForNotifyPersonEdd = 'control-panel__footer-even'\n\n    return (\n        <div className='control-panel__actions'>\n\n            <div className={classesOpen}>\n                <div className=\"control-panel__footer\">\n                    <div className=\"control-panel__select\">\n                        <label\n                            htmlFor='stand'\n                            className={classesForLabelStand}\n                        > Контур </label>\n\n                        <Select\n                            isClearable\n                            name='stand'\n                            className='select-react'\n                            onChange={setStand}\n                            options={DataForItem.stand}\n                            placeholder='Контур'\n                            noOptionsMessage={() => 'Не найдено'}\n                        />\n                    </div>\n\n                    <div className=\"control-panel__select\">\n                        <label\n                            htmlFor='country'\n                            className={classesForLabelCountry}\n                        > Страна </label>\n\n                        <Select\n                            isClearable\n                            name='country'\n                            className='select-react'\n                            onChange={setQualities}\n                            options={DataForItem.qualities}\n                            placeholder='Страна'\n                            noOptionsMessage={() => 'Не найдено'}\n                        />\n                    </div>\n\n                    <div className=\"control-panel__time\">\n                        <button\n                            id='btnOpening'\n                            className={classesButton}\n                            onClick={onShowSetTime}\n                        >{buttonTitle}</button>\n\n                        <CurrentTime\n                            showSetTime={showSetTime}\n                            onShowSetTime={onShowSetTime}\n                            toGetTimeFromPanel={toGetTimeFromPanel}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"control-panel__footer\">\n                    <div className=\"control-panel__select\">\n                        <label\n                            htmlFor='tg'\n                            className={classesForLabelTg}\n                        > ТГ </label>\n\n                        <Select\n                            isMulti\n                            className='select-react'\n                            onChange={setSelectTG}\n                            options={DataForItem.tg}\n                            placeholder='Выбрать ТГ'\n                            noOptionsMessage={() => 'ТГ не найдена'}\n                        />\n                    </div>\n\n                    <div className=\"control-panel__select\">\n                        <label\n                            htmlFor='priority'\n                            className={classesForLabelPriority}\n                        > Приоритет </label>\n\n                        <Select\n                            isClearable\n                            name='priority'\n                            className='select-react'\n                            onChange={setSelectPriority}\n                            options={DataForItem.priority}\n                            placeholder='Приоритет'\n                        />\n                    </div>\n\n                    <div className=\"control-panel__select\">\n                        <label\n                            htmlFor='effect'\n                            className={classesForLabelEffect}\n                        > Влияние </label>\n\n                        <Select\n                            isClearable\n                            name='effect'\n                            className='select-react'\n                            onChange={setSelectEffect}\n                            options={DataForItem.effect}\n                            placeholder='Влияние'\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <div className={classesNotify}>\n                <div className=\"control-panel__footer control-panel__footer-notify\">\n                    <div className='control-panel__footer-radio'>\n                        <label>\n                            <input\n                                name=\"whoNotify\"\n                                type=\"radio\"\n                                checked={isEven}\n                                value='even'\n                                onChange={onChangeInput}\n                            />\n                            <span>Чётные дни</span>\n                        </label>\n                    </div>\n                    <div className='control-panel__footer-radio'>\n                        <label>\n                            <input\n                                name=\"whoNotify\"\n                                type=\"radio\"\n                                checked={!isEven}\n                                value='odd'\n                                onChange={onChangeInput}\n                            />\n                            <span>Нечётные дни</span>\n                        </label>\n                    </div>\n                </div>\n\n                <div className=\"control-panel__footer control-panel__footer-notify control-panel__footer-even\">\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            className=\"filled-in\"\n                            name='sokolov'\n                            checked={isNotifyPerson.sokolov}\n                            onChange={onCheckBox}\n                        />\n                        <span>Андрей Соколов</span>\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            className=\"filled-in\"\n                            name='balamutin'\n                            checked={isNotifyPerson.balamutin}\n                            onChange={onCheckBox}\n                        />\n                        <span>Анатолий Баламутин</span>\n                    </label>\n\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            className=\"filled-in\"\n                            name='zalygin'\n                            checked={isNotifyPerson.zalygin}\n                            onChange={onCheckBox}\n                        />\n                        <span>Михаил Залыгин</span>\n                    </label>\n\n                    <label className={classesForNotifyPersonEven}>\n                        <input\n                            type=\"checkbox\"\n                            className=\"filled-in\"\n                            name='novak'\n                            checked={isNotifyPerson.novak}\n                            onChange={onCheckBox}\n                        />\n                        <span>Владислав Новак</span>\n                    </label>\n\n                    <label className={classesForNotifyPersonEdd}>\n                        <input\n                            type=\"checkbox\"\n                            className=\"filled-in\"\n                            name='suprun'\n                            checked={isNotifyPerson.suprun}\n                            onChange={onCheckBox}\n                        />\n                        <span>Иван Супрун</span>\n                    </label>\n                </div>\n                </div>\n\n            <div className={classesClose}>\n                <div className=\"control-panel__footer control-panel__footer-closing\">\n                    <div className=\"control-panel__time\">\n                        <button\n                            id='btnClosing'\n                            className={classesButtonClosing}\n                            onClick={onShowSetTimeClosing}\n                        >{buttonTitleClosing}</button>\n\n                        <CurrentTime\n                            onShowSetTimeClosing={onShowSetTimeClosing}\n                            isShowSetTimeClosing={isShowSetTimeClosing}\n                            toGetTimeClosing={toGetTimeClosing}\n                            flagClosing={true}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};","import ControlPanel from \"./controlPanel\";\nexport default ControlPanel;","import './cardItem.css'\nimport {useEffect, useState} from \"react\";\nimport TextareaAutosize from 'react-textarea-autosize';\n\nconst CardItem = (props) => {\n    const {\n        isDataForCard = Object.prototype,\n        isTimeForCard = Object.prototype,\n        isTimeForClosing = Object.prototype,\n\n        onCheckInside = Function.prototype,\n        flagOpening = true,\n        isInside = false,\n        getProblemForAllCards = Function.prototype,\n        isProblemForAllCards = null,\n        getOpsNumberForAllCards = Function.prototype,\n        isOpsNumberAllCards = null,\n        getWhoNotify = Function.prototype,\n        isWhoNotifyForClosing = null\n    } = props\n\n    const [isChooseInside, setChooseInside] = useState(false)\n    const [isOpsNumber, setOpsNumber] = useState('')\n    const [isProblem, setProblem] = useState('')\n    const [isNotes, setNotes] = useState('')\n    const [isWhoNotify, setWhoNotify] = useState('')\n    const [isNotesClosing, setNotesClosing] = useState('')\n    const [isWarning, setWarning] = useState(false)\n    const [isPrimary, setPrimary] = useState(false)\n    const [isInputHourForClosing, setInputHourForClosing] = useState('')\n    const [isInputMinuteForClosing, setInputMinuteForClosing] = useState('')\n\n    const {\n        qualities,\n        stand,\n        tg,\n        priority,\n        effect\n    } = isDataForCard\n\n    const {hour, minute} = isTimeForCard\n    const {hourClosing, minuteClosing} = isTimeForClosing\n\n    // Обработка входящего массива с ТГ\n    let tgOut = null\n\n    if (tg && tg.length === 1) {\n        tgOut = tg.map(i => i.value)\n    }\n\n    if (tg && tg.length > 1) {\n        tgOut = tg.map((i, index) => {\n            if (index < tg.length - 1) return `${i.value}, `\n            return i.value\n        })\n    }\n\n    const onChooseInside = () => {\n        setChooseInside(!isChooseInside)\n    }\n\n    const onWriteInput = (event) => {\n        let {name, value} = event.target\n\n        if (name === 'ops' && Number(value) && value.length < 6) setOpsNumber(value)\n        if (name === 'ops' && value.length === 5) {\n            setWarning(false)\n            setPrimary(true)\n        }\n        if (name === 'ops' && value.length < 5) setPrimary(false)\n        if (name === 'ops' && value === '') setOpsNumber(value)\n\n        if (name === 'problem') {\n            setProblem(value)\n        }\n\n        if (name === 'notes') {\n            setNotes(value)\n        }\n\n        if (name === 'whoIsNotify') {\n            setWhoNotify(value)\n        }\n\n        if (name === 'notesClosing') {\n            setNotesClosing(value)\n        }\n\n        if (name === 'hourInputForClosing') {\n            setInputHourForClosing(value)\n        }\n\n        if (name === 'minuteInputForClosing') {\n            setInputMinuteForClosing(value)\n        }\n    }\n\n    const onWarningForOps = (event) => {\n        let {value} = event.target\n        if (value.length < 5) setWarning(true)\n    }\n\n    let classesForCheckBox = 'summary__checkBox'\n    let classesForCardInside = 'hide'\n    let classesForLabelInput = 'summary__chooseInsideLabel'\n\n    let inside = null\n    if (isChooseInside) {\n        inside = 'ВНУТРЕННИЙ'\n        classesForCheckBox = classesForCheckBox + ' summary__checkBox-topCheckBox'\n        classesForCardInside = 'card-title amber-text text-lighten-3'\n        classesForLabelInput = classesForLabelInput + ' mt-7'\n    }\n\n    let classesIfWarning = ''\n    if (isWarning) classesIfWarning = 'red lighten-1'\n\n    let classesIfPrimary = 'form__input orange darken-1 summary__ops-input'\n    if (isPrimary) classesIfPrimary = 'form__input summary__ops-input summary__ops-input-colors'\n\n    if (isInside) {\n        inside = 'ВНУТРЕННИЙ'\n        classesForCardInside = 'card-title'\n    }\n\n    // componentDidUpdate\n    useEffect(() => {\n        onCheckInside(isChooseInside)\n    // eslint-disable-next-line\n    }, [isChooseInside])\n\n    //Передать наверх данные из поля ПРОБЛЕМА\n    // componentDidUpdate\n    useEffect(() => {\n        getProblemForAllCards(isProblem)\n    // eslint-disable-next-line\n    }, [isProblem])\n\n    //Передать наверх данные из поля КТО ОПОВЕЩЕН\n    // componentDidUpdate\n    useEffect(() => {\n        getWhoNotify(isWhoNotify)\n    // eslint-disable-next-line\n    }, [isWhoNotify])\n\n    //Передать наверх данные из поля OPS\n    // componentDidUpdate\n    useEffect(() => {\n        getOpsNumberForAllCards(isOpsNumber)\n    // eslint-disable-next-line\n    }, [isOpsNumber])\n\n    if (flagOpening) {\n        return(\n            <ViewOpening\n                hour={hour}\n                minute={minute}\n\n                inside={inside}\n                stand={stand}\n                tgOut={tgOut}\n                priority={priority}\n                effect={effect}\n                qualities={qualities}\n\n                isChooseInside={isChooseInside}\n                isProblem={isProblem}\n                isOpsNumber={isOpsNumber}\n                isNotes={isNotes}\n                isWhoNotify={isWhoNotify}\n\n                onChooseInside={onChooseInside}\n                onWriteInput={onWriteInput}\n                onWarningForOps={onWarningForOps}\n\n                classesForCheckBox={classesForCheckBox}\n                classesForCardInside={classesForCardInside}\n                classesForLabelInput={classesForLabelInput}\n                classesIfWarning={classesIfWarning}\n                classesIfPrimary={classesIfPrimary}\n            />\n        )\n    }\n\n    return(\n        <ViewClosing\n            hour={hour}\n            minute={minute}\n            hourClosing={hourClosing}\n            minuteClosing={minuteClosing}\n\n            inside={inside}\n            stand={stand}\n            tgOut={tgOut}\n            priority={priority}\n            effect={effect}\n            qualities={qualities}\n\n            isChooseInside={isChooseInside}\n            isNotesClosing={isNotesClosing}\n            isProblemForAllCards={isProblemForAllCards}\n            isOpsNumberAllCards={isOpsNumberAllCards}\n            isInputHourForClosing={isInputHourForClosing}\n            isInputMinuteForClosing={isInputMinuteForClosing}\n            isWhoNotifyForClosing={isWhoNotifyForClosing}\n\n            onWriteInput={onWriteInput}\n\n            classesForCardInside={classesForCardInside}\n        />\n    )\n\n};\n\nexport default CardItem;\n\nconst ViewOpening = (props) => {\n    const {\n        hour,\n        minute,\n\n        inside,\n        stand,\n        qualities,\n        tgOut,\n        priority,\n        effect,\n\n        isChooseInside,\n        isProblem,\n        isOpsNumber,\n        isNotes,\n        isWhoNotify,\n\n        onChooseInside,\n        onWriteInput,\n        onWarningForOps,\n\n        classesForCheckBox,\n        classesForCardInside,\n        classesForLabelInput,\n        classesIfWarning,\n        classesIfPrimary,\n    } = props\n\n    return(\n        <div className=\"card blue-grey darken-1 summary\">\n            <div className=\"card-content white-text summary-head\">\n\n                <div className={classesForCheckBox}>\n                    <div className=\"summary__checkbox-content\">\n                        <span className={classesForCardInside}>{inside}</span>\n                        <span className=\"card-title\">Инцидент ОТКРЫТ</span>\n                    </div>\n\n                    <label className={classesForLabelInput}>\n                        <input\n                            type=\"checkbox\"\n                            name='inside'\n                            className=\"filled-in summary__chooseInside\"\n                            checked={isChooseInside}\n                            onChange={onChooseInside}\n                        />\n                        <span>Внутренний</span>\n                    </label>\n                </div>\n\n                <span className=\"card-title\"><span className='red-text text-lighten-3 colorCoral'>{stand}</span> <span className='colorAqua'>{qualities}</span></span>\n            </div>\n\n            <div className=\"card-action\">\n                <div className=\"summary__body\">\n\n                    <TextareaAutosize\n                        className='summary__area'\n                        value={isProblem}\n                        name=\"problem\"\n                        placeholder='Описание проблемы...'\n                        onChange={onWriteInput}\n                    />\n\n                    <p>ТГ: <span>{tgOut}</span></p>\n\n                    <p>Приоритет: <span>{priority}</span></p>\n                    <p>Степень влияния: <span>{effect}</span></p>\n\n                    <div className=\"summary__ops\">\n                        <p className={classesIfWarning}>https://jira.crpt.ru/browse/OPS-</p>\n                        <input\n                            value={isOpsNumber}\n                            name='ops'\n                            className={classesIfPrimary}\n                            placeholder='00000'\n                            type=\"text\"\n                            onChange={onWriteInput}\n                            onBlur={onWarningForOps}\n                        />\n                    </div>\n\n                    <p>Время инцидента: <span className='blue-text text-accent-1'><b>{hour}:{minute}</b></span></p>\n\n                    <div className='summary__whoIsNotify'>\n                        <div className='summary__whoIsNotify-title'>Кто оповещён:</div>\n                        <TextareaAutosize\n                        className='summary__area'\n                        value={isWhoNotify}\n                        name=\"whoIsNotify\"\n                        onChange={onWriteInput}\n                    /></div>\n\n                    <p>Примечание:</p>\n\n                    <TextareaAutosize\n                        className='summary__area'\n                        value={isNotes}\n                        name=\"notes\"\n                        placeholder='Решение проблемы...'\n                        onChange={onWriteInput}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst ViewClosing = (props) => {\n    const {\n        hour,\n        minute,\n        hourClosing,\n        minuteClosing,\n\n        inside,\n        stand,\n        qualities,\n        tgOut,\n        priority,\n        effect,\n\n        isNotesClosing,\n        isProblemForAllCards,\n        isOpsNumberAllCards,\n        isInputHourForClosing,\n        isInputMinuteForClosing,\n        isWhoNotifyForClosing,\n\n        onWriteInput,\n\n        classesForCardInside,\n    } = props\n\n    return(\n        <div className=\"card blue-grey darken-1 summary\">\n            <div className=\"card-content white-text summary-head\">\n\n                <div className=\"summary__checkbox-content\">\n                    <span className={classesForCardInside}>{inside}</span>\n                    <span className=\"card-title\">Инцидент ЗАКРЫТ</span>\n                </div>\n\n                <span className=\"card-title\"><span>{stand}</span> <span>{qualities}</span></span>\n            </div>\n\n            <div className=\"card-action\">\n                <div className=\"summary__body summary__body-closing\">\n                    <p>{isProblemForAllCards}</p>\n\n                    <p>ТГ: <span>{tgOut}</span></p>\n\n                    <p>Приоритет: <span>{priority}</span></p>\n                    <p>Степень влияния: <span>{effect}</span></p>\n                    <p>https://jira.crpt.ru/browse/OPS-{isOpsNumberAllCards}</p>\n\n                    <div>Время инцидента: <span>{hour}:{minute}</span> - <span className='red-text text-accent-1'><b>{hourClosing}:{minuteClosing}</b></span> (<ViewTmeClosing\n                        isInputHourForClosing={isInputHourForClosing}\n                        isInputMinuteForClosing={isInputMinuteForClosing}\n                        onWriteInput={onWriteInput}\n                    />)</div>\n\n                    <p>Кто оповещен: <span>{isWhoNotifyForClosing}</span></p>\n\n                    <p>Примечание:</p>\n                    <TextareaAutosize\n                        className='summary__area'\n                        value={isNotesClosing}\n                        name=\"notesClosing\"\n                        placeholder='Решение проблемы...'\n                        onChange={onWriteInput}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst ViewTmeClosing = (props) => {\n    const {\n        isInputHourForClosing,\n        isInputMinuteForClosing,\n\n        onWriteInput\n    } = props\n\n    return(\n        <div className='summary__time-inputs'>\n            <input\n                type=\"text\"\n                value={isInputHourForClosing}\n                name='hourInputForClosing'\n                className='browser-default summary__time-input'\n                onChange={onWriteInput}\n            /> час.\n            <input\n                type=\"text\"\n                value={isInputMinuteForClosing}\n                name='minuteInputForClosing'\n                className='browser-default summary__time-input'\n                onChange={onWriteInput}\n            /> мин.\n        </div>\n    )\n}","import CardItem from \"./cardItem\";\nexport default CardItem;","import NotifyPerson from \"./notifyPerson\";\nexport default NotifyPerson;","import './notifyPerson.css'\n\nconst NotifyPerson = (props) => {\n    const {\n        isNotifyPerson = Array.prototype,\n        isDataForCard = Object.prototype\n    } = props\n\n    let priority = null\n    let effect = null\n    let pre = 'о'\n\n    if (isDataForCard.priority === 'Критический') priority = 'критическом'\n    if (isDataForCard.priority === 'Высокий') priority = 'высоком'\n    if (isDataForCard.priority === 'Средний') priority = 'среднем'\n\n    if (isDataForCard.effect === 'Массовое') effect = 'массовом'\n    if (isDataForCard.effect === 'Групповое') effect = 'групповом'\n\n    if (priority === null) pre = 'об'\n    if (priority === null &&  effect !== null) pre = 'о'\n\n\n    return(\n        <div className=\"card blue-grey darken-1\">\n            <div className=\"card-content white-text summary-head summary__notifyPerson-items\">\n                {\n                    isNotifyPerson.map(item => {\n                        return (\n                            <span\n                                key={item}\n                                className='summary__notifyPerson-item'\n                            >{item}</span>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"card-action summary__notifyPerson-txt\">\n                <p>Оповещаем {pre} {priority} {effect} инциденте</p>\n            </div>\n        </div>\n    )\n}\n\nexport default NotifyPerson;","import UpdateCard from \"./updateCard\";\nexport default UpdateCard;","import TextareaAutosize from \"react-textarea-autosize\";\nimport {useState} from \"react\";\n\nconst UpdateCard = (props) => {\n    const {stand, qualities} = props.isDataForCard\n    const {isInside} = props\n\n    const [isNotesUpdate, setNotesUpdate] = useState('')\n\n    let inside = null\n    let classesForCardInside = 'hide'\n\n    if (isInside) {\n        inside = 'ВНУТРЕННИЙ'\n        classesForCardInside = 'card-title'\n    }\n\n    const onWriteInputUpdate = (event) => {\n        let {value} = event.target\n\n        setNotesUpdate(value)\n    }\n\n    return(\n        <div className=\"card blue-grey darken-1\">\n            <div className=\"card-content white-text summary-head\">\n                <div className=\"\">\n                    <span className={classesForCardInside}>{inside}</span>\n                    <span className=\"card-title\">Инцидент в работе</span>\n                </div>\n\n                <span className=\"card-title\"><span>{stand}</span> <span>{qualities}</span></span>\n            </div>\n            <div className=\"card-action\">\n                <TextareaAutosize\n                    className='summary__area'\n                    value={isNotesUpdate}\n                    name=\"notesUpdate\"\n                    placeholder='Update...'\n                    onChange={onWriteInputUpdate}\n                />\n            </div>\n        </div>\n    )\n}\nexport default UpdateCard","import CardsList from \"./cardsList\";\nexport default CardsList;","import {useState} from \"react\";\n\nimport './cardsList.css';\nimport CardItem from \"../cardItem\";\nimport NotifyPerson from \"../notifyPerson\";\nimport UpdateCard from \"../updateCard\";\n\nconst CardsList = (props) => {\n\n    const {\n        isDataForCard = Object.prototype,\n        isTimeForCard = Object.prototype,\n        isTimeForClosing = Object.prototype,\n        isNotifyPerson = Array.prototype,\n    } = props\n\n    const [isInside, setInside] = useState(false)\n    const [isProblemForAllCards, setProblemForAllCards] = useState(null)\n    const [isOpsNumberAllCards, setOpsNumberAllCards] = useState(null)\n    const [isWhoNotifyForClosing, setWhoNotifyForClosing] = useState(null)\n\n    const onCheckInside = (flag) => {\n        setInside(flag)\n    }\n\n    const getProblemForAllCards = (text) => {\n        setProblemForAllCards(text)\n    }\n\n    const getOpsNumberForAllCards = (num) => {\n        setOpsNumberAllCards(num)\n    }\n\n    const getWhoNotify = (txt) => {\n        setWhoNotifyForClosing(txt)\n    }\n\n    return(\n        <div className=\"summary-forms\">\n            <CardItem\n                isDataForCard={isDataForCard}\n                isTimeForCard={isTimeForCard}\n                onCheckInside={onCheckInside}\n                getProblemForAllCards={getProblemForAllCards}\n                getOpsNumberForAllCards={getOpsNumberForAllCards}\n                getWhoNotify={getWhoNotify}\n            />\n\n            <div className=\"summary summary__helpers\">\n                <UpdateCard\n                    isDataForCard={isDataForCard}\n                    isInside={isInside}\n                />\n\n                <NotifyPerson\n                    isNotifyPerson={isNotifyPerson}\n                    isDataForCard={isDataForCard}\n                />\n            </div>\n\n            {/*Закрытие*/}\n            <CardItem\n                isDataForCard={isDataForCard}\n                isTimeForCard={isTimeForCard}\n                isInside={isInside}\n                flagOpening={false}\n                isProblemForAllCards={isProblemForAllCards}\n                isOpsNumberAllCards={isOpsNumberAllCards}\n                isTimeForClosing={isTimeForClosing}\n                isWhoNotifyForClosing={isWhoNotifyForClosing}\n            />\n        </div>\n    )\n};\n\nexport default CardsList;","import Main from \"./main\";\nexport default Main;","import {useState} from \"react\";\nimport ControlPanel from \"../../controlPanel\";\nimport CardsList from \"../../cardsList\";\nimport DataForItem from \"../../../data/dataForItem\";\n\nconst Main = () => {\n    const [isDataForCard, setDataForCard] = useState({})\n    const [isTimeForCard, setTimeForCard] = useState({})\n    const [isTimeForClosing, setTimeForClosing] = useState({})\n    const [isNotifyPerson, setNotifyPerson] = useState([])\n\n    const toGetDataFromPanel = (obj) => {\n        setDataForCard(obj)\n    }\n\n    const toGetTimeFromPanel = (obj) => {\n        setTimeForCard(obj)\n    }\n\n    const toGetTimeClosing = (obj) => {\n        setTimeForClosing(obj)\n    }\n\n    const toGetNotifyPerson = (obj) => {\n        // обрабатываем объект из панели оповещения и отправляем userName в массив isNotifyPerson\n        const arr = []\n\n        DataForItem.notifyPerson.forEach(item => {\n            if (obj[item.name]) arr.push(item.userName)\n        })\n\n        setNotifyPerson(arr)\n    }\n\n    return(\n        <>\n            <ControlPanel\n                toGetDataFromPanel={toGetDataFromPanel}\n                toGetTimeFromPanel={toGetTimeFromPanel}\n                toGetTimeClosing={toGetTimeClosing}\n                toGetNotifyPerson={toGetNotifyPerson}\n            />\n\n            <div className='content container'>\n                <CardsList\n                    isDataForCard={isDataForCard}\n                    isTimeForCard={isTimeForCard}\n                    isTimeForClosing={isTimeForClosing}\n                    isNotifyPerson={isNotifyPerson}\n                />\n            </div>\n        </>\n\n    )\n};\n\nexport default Main;","import Footer from \"./footer\";\nexport default Footer;","const Footer = () => {\n    return(\n        <footer className=\"page-footer blue-grey darken-4\">\n            <div className=\"footer-copyright\">\n                <div className=\"container\">\n                    DUTY © {new Date().getFullYear()}\n                    <a className=\"grey-text text-lighten-4 right\" href=\"https://github.com/webdirection-dev/templater-spa\">Repo</a>\n                </div>\n            </div>\n        </footer>\n    )\n};\n\nexport default Footer;","import Header from \"../layout/header\";\nimport Main from \"../layout/main\";\nimport Footer from \"../layout/footer\";\n\nimport './App.css';\n\nfunction App() {\n    return (\n        <>\n            <Header />\n            <Main />\n            <Footer />\n        </>\n    );\n}\n\nexport default App;\n","import App from \"./app\";\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./components/app\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}